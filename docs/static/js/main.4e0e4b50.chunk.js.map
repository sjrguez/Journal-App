{"version":3,"sources":["firebase/firebase-config.js","helpers/loadNotes.js","types/types.js","helpers/fileUpload.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","loadNotes","uid","a","collection","get","noteSnap","notes","forEach","hijo","push","data","id","Types","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","console","log","secure_url","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","noteToFireStore","url","doc","update","Swal","fire","title","refreshNote","message","deleteNote","useForm","initialState","useState","values","setValues","reset","newState","handleInputChange","target","name","value","NotesAppBar","useDispatch","useSelector","state","active","noteDate","moment","date","className","format","style","display","onChange","files","text","allowOutsideClick","onBeforeOpen","showLoading","showConfirmButton","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","src","alt","delete","icon","NothingSelected","setError","err","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","e","finally","logout","JournalEntry","Moment","backgroundSize","backgroundImage","JournalEntries","map","entry","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","LoginScreen","uiState","ui","onSubmit","preventDefault","autoComplete","disabled","loading","signInWithPopup","to","RegisterScreen","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","msgError","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","not","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4e0e4b50.chunk.js","sourcesContent":["import firebase from 'firebase';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBpAdTAjCxKD3rdz8pmEW0sxDRm8e6YfdY\",\n    authDomain: \"react-app-6e736.firebaseapp.com\",\n    projectId: \"react-app-6e736\",\n    storageBucket: \"react-app-6e736.appspot.com\",\n    messagingSenderId: \"638793712598\",\n    appId: \"1:638793712598:web:db11797e4c108b9b7fda77\"\n  };\n\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\n\nexport {\n    db,\n    googleAuthProvider,\n    firebase\n}","import { db } from \"../firebase/firebase-config\"\n\n\n\nexport const loadNotes = async (uid) => {\n    try {\n        const noteSnap = await db.collection(`${uid}/journal/notes`).get();\n        const notes = [];\n        noteSnap.forEach(hijo => {\n            notes.push({...hijo.data(), id: hijo.id});\n        })\n        return notes;\n    } catch (error) { } \n}","\n\nexport const Types = {\n    login: '[Auth] Login',\n    logout: '[Auth] Logout',\n\n    uiSetError: '[UI] Set Error',\n    uiRemoveError: '[UI] Remove Error',\n\n    uiStartLoading: '[UI] Start loading',\n    uiFinisthLoading: '[UI] Finish loading',\n\n    notesAddNew: '[Notes] New note',\n    notesActive: '[Notes] Set active note',\n    notesLoad: '[Notes] Load note',\n    notesUpdated: '[Notes] Update note saved',\n    notesFileUrl: '[Notes] Update image url',\n    notesDelete: '[Notes] Delete note',\n    notesLogoutCleaning: '[Notes] Logout Cleaning'\n}","\n\nexport const fileUpload = async (file ) => {\n\n    const cloudUrl = \"https://api.cloudinary.com/v1_1/drzpn3owg/upload\";\n\n    try {\n        const formData =  new FormData();\n        \n        formData.append(\"upload_preset\", \"react-journal\")\n        formData.append(\"file\", file)\n\n        const resp = await fetch(cloudUrl, {\n            method: \"POST\",\n            body: formData\n        })\n        \n        if(resp.ok) {\n            const cloudResp = await resp.json();\n            console.log(cloudResp);\n            return cloudResp.secure_url\n        } else {\n            throw await resp.json();\n        }\n    } catch (error) {\n        console.log(error);\n        throw error\n    }\n\n\n}","import { db } from \"../firebase/firebase-config\"\nimport { loadNotes } from \"../helpers/loadNotes\"\nimport { Types } from \"../types/types\"\nimport Swal from 'sweetalert2'\nimport { fileUpload } from \"../helpers/fileUpload\"\n\nexport const startNewNote = () => {\n    return async (dispatch, getState) => {\n        const {uid} = getState().auth\n\n        const newNote = {\n            title: '',\n            body: '',\n            date: new Date().getTime()\n        }\n\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote)\n\n        dispatch(\n            activeNote(doc.id, newNote)\n        )\n\n        dispatch(\n            addNewNote(doc.id, newNote)\n        )\n    }\n}\n\nexport const activeNote = (id, note) => {\n    return {\n        type: Types.notesActive,\n        payload: {\n            id,\n            ...note\n        }\n    }\n}\n\n\nexport const addNewNote = (id, note) => {\n    return {\n        type: Types.notesAddNew,\n        payload: {\n            id,\n            ...note\n        }\n    }\n}\n\n\nexport const startLoadingNotes = (id) => {\n    return async  (dispatch) => {\n        const notes = await loadNotes(id);\n        dispatch(\n            setNotes(notes)\n        )\n\n    }\n}\n\nexport const setNotes = (notes) => {\n    return {\n        type: Types.notesLoad,\n        payload: notes\n    }\n}\n\n\nexport const startSaveNote = (note) => {\n\n    return async (dispatch, getState) => {\n        const { uid } = getState().auth\n\n        const noteToFireStore = {...note};\n        delete noteToFireStore.id;\n        if(!note.url) delete note.url;\n        try {\n            await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFireStore)\n            Swal.fire('Saved', note.title, 'success')\n            \n            dispatch(\n                refreshNote(note)\n            )\n        } catch (error) {\n            Swal.fire('Error', error.message, 'error')\n        }\n        \n    }\n}\n\n\nexport const refreshNote = (note) => {\n    return {\n        type: Types.notesUpdated,\n        payload: {\n            ...note\n        }\n    }\n}\n\nexport const startUploading = (file) => {\n    return async (dispatch, getState) => {\n\n        Swal.fire({\n            title: \"Uploading...\",\n            text: \"Please wait...\",\n            allowOutsideClick: false,\n            onBeforeOpen: () =>{\n                Swal.showLoading()\n            },\n            showConfirmButton: false\n\n        })\n        const { active:activeNote } = getState().notes\n\n        try {\n            const fileUrl = await fileUpload(file);\n            activeNote.url = fileUrl\n            dispatch(\n                startSaveNote(activeNote)\n            )\n        } catch (error) {\n            \n        } finally {\n            Swal.close()\n        }\n\n\n    }\n}\n\nexport const startDeletingNote = (id) => {\n    return async (dispatch, getState) => {\n        const uid = getState().auth.uid;\n\n        try {\n            await db.doc(`${uid}/journal/notes/${id}`).delete();\n            dispatch(\n                deleteNote(id)\n            )\n            \n            Swal.fire({\n                title: \"Deleted!\",\n                icon: \"success\"\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nexport const deleteNote = (id) => {\n    return {\n        type: Types.notesDelete,\n        payload: id\n    }\n}\n\nexport const noteLogout = () => {\n    return {\n        type: Types.notesLogoutCleaning\n    }\n}","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = (newState = initialState) => {\n        setValues( newState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport moment from 'moment';\nimport { startSaveNote, startUploading } from '../../actions/notes';\n\nexport const NotesAppBar = () => {\n\n    const dispatch = useDispatch()\n    const {active: note} = useSelector(state => state.notes)\n    const noteDate = moment(note.date)\n\n    const handleSave = () => {\n        dispatch(\n            startSaveNote(note)\n        )\n    }\n\n\n    const handlePicctureClick = () => {\n        document.querySelector(\"#fileSelector\").click();\n\n    }\n\n    const handleFileChange = ({target}) => {\n        console.log({file: target.files});\n        const file = target.files[0];\n        \n        if(!file) return;\n        dispatch(\n            startUploading(file)\n        )\n\n    }\n    \n    return (\n        <div className=\"notes_appbar\">\n            <span>{noteDate.format('MMMM Do YYYY')}</span>\n            <input \n                type=\"file\"\n                name=\"file\"\n                style={{display: 'none'}}\n                onChange={ handleFileChange }\n                id=\"fileSelector\"\n            />\n            <div>\n                <button\n                    className=\"btn\"\n                    onClick={handlePicctureClick}\n                >Picture</button>\n\n                <button\n                    className=\"btn\"\n                    onClick={handleSave}\n                >Save</button>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { activeNote, startDeletingNote } from '../../actions/notes'\nimport { useForm } from '../../hooks/useForm'\nimport { NotesAppBar } from './NotesAppBar'\n\nexport const NoteScreen = () => {\n\n    const dispatch = useDispatch()\n\n    const {active: note} = useSelector(state => state.notes)\n    // const [note, setNote] = useState(note)\n    const [formValues, handleInputChange, reset] = useForm(note)\n    const {body, title} = formValues;\n    \n    const activeId = useRef(note.id)\n\n    useEffect(() => {\n            if(activeId.current !== note.id) {\n                reset(note)\n                activeId.current = note.id;\n            }\n    }, [note, reset])\n\n\n    useEffect(() => {\n        dispatch( activeNote(formValues.id, {...formValues}) )\n\n    }, [formValues, dispatch])\n\n    const handleDelete = () => {\n        dispatch(\n            startDeletingNote(activeId.current)\n        )\n    }\n\n    return (\n        <div className=\"notes__main-content\">\n            <NotesAppBar />\n\n            <div className=\"notes__content\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Some awesome title\"\n                    className=\"notes_title-input\"\n                    name=\"title\"\n                    value={title}\n                    onChange={handleInputChange}\n                />\n\n                <textarea\n                    placeholder=\"What happened today\"\n                    className=\"notes__textarea\"\n                    name=\"body\"\n                    value={body}\n                    onChange={handleInputChange}\n                >\n\n                </textarea>\n\n\n                {\n                    note.url &&\n                    (\n                        <div className=\"notes_image\">\n                            <img \n                                src={note.url}\n                                alt={title}\n                            />\n                        </div>\n                    )\n                }\n\n            </div>\n\n                {\n                    activeId.current &&\n                    (\n                        <button\n                            className=\"btn btn-danger\"\n                            onClick={handleDelete}\n                        >\n                                Eliminar nota\n\n                        </button>\n\n                    )\n                }\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div className=\"nothing__main-content\">\n            <p>\n                Select something\n                <br />\n                or Create an entry!!\n            </p>\n\n            <i className=\"far fa-star fa-4x mt-5\"></i>\n        </div>\n    )\n}\n","import { Types } from \"../types/types\"\n\n\n\n\nexport const setError = (err) => {\n    return {\n        type: Types.uiSetError,\n        payload: err\n    }\n}\n\n\nexport const uiStartLoading = () => {\n    return {\n        type: Types.uiStartLoading\n    }\n}\n\nexport const uiFinishLoading = () => {\n    return {\n        type: Types.uiFinisthLoading\n    }\n}\n\n\n\nexport const removeError = () => {\n\n    return {\n        type: Types.uiRemoveError\n    }\n}\n\n\n\n","import { Types } from \"../types/types\";\n\nimport Swal from 'sweetalert2';\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\nimport { uiFinishLoading, uiStartLoading } from \"./ui\";\nimport { noteLogout } from \"./notes\";\n\n\n\n\n\nexport const startLoginEmailPassword = (email, password) => {\n    return (dispatch) => {\n        dispatch(uiStartLoading())\n        firebase.auth().signInWithEmailAndPassword(email, password)\n        .then(({user}) => {\n            \n            dispatch( \n                login(user.uid, user.displayName)\n            )\n        })\n        .catch(e => {\n            Swal.fire('Error', e.message, 'error');\n        })\n        .finally(() => {\n            dispatch(uiFinishLoading())\n        })\n    }\n}\n    \n\nexport const startRegisterWithEmailPasswordName =  (email, password, name) => {\n    \n    return (dispatch) => {\n        \n        firebase.auth().createUserWithEmailAndPassword(email, password)\n            .then( async ({user}) => {\n                await user.updateProfile({displayName: name})\n                dispatch(\n                    login(user.uid, user.displayName)\n                )\n            }).catch(e => {\n                Swal.fire('Error', e.message, 'error');\n            })\n    }\n}\n\n\nexport const startGoogleLogin = () => {\n    return async (dispatch) => {\n        try {\n            const { user } = await firebase.auth().signInWithPopup(googleAuthProvider)\n            dispatch(\n                login(user.uid, user.displayName)\n            )\n        } catch (error) {\n            Swal.fire('Error', error.message, 'error');\n        }\n    }\n}\n\n\nexport const login = (uid, displayName) => {\n    return {\n        type: Types.login,\n        payload: {\n            uid,\n            displayName\n        }\n    }\n}\n\n\nexport const startLogOut = () => {\n    return async (dispatch) => {\n        try {\n            await firebase.auth().signOut()\n            dispatch(\n                logout()\n            )\n            dispatch(\n                noteLogout()\n            )\n        } catch (error) {\n            Swal.fire('Error', error.message, 'error');\n        }\n    }\n}\n\n\nexport const logout = () => {\n    return {\n        type: Types.logout\n    }\n}","import React from 'react'\nimport Moment from 'moment'\nimport { activeNote } from '../../actions/notes'\nimport { useDispatch } from 'react-redux'\nexport const JournalEntry = (note) => {\n    // body,title,date, id, url\n    const noteDate = Moment(note.date)\n    const dispatch = useDispatch()\n\n    const handleEntryClick = () => {\n        dispatch(\n            activeNote(note.id, note)\n        )\n    }\n\n\n    return (\n        <div\n            className=\"journal__entry pointer animate__animated animate__slideInLeft animate__faster\"\n            onClick={handleEntryClick}\n        >\n            {\n                note.url &&\n                (   <div\n                        className=\"journal__entry-picture\"\n                        style={{\n                            backgroundSize: 'cover',\n                            backgroundImage: `url(${note.url})`\n                        }}\n                    ></div>\n                )\n                \n            \n            }\n\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-tittle\">\n                    {note.title}\n                </p>\n\n                <p className=\"journal__entry-content\">\n                    { note.body }\n\n                </p>\n            </div>\n                \n\n            <div className=\"journal__entry-date-box\">\n                <span>{noteDate.format('dddd')}</span>\n                <h4>{noteDate.format('Do')}</h4>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { JournalEntry } from './JournalEntry'\n\nexport const JournalEntries = () => {\n    const { notes } = useSelector(state => state.notes)\n\n    return (\n        <div className=\"journal_entries\">\n            {\n                notes.map(entry => (\n                    <JournalEntry key={entry.id} {...entry} />\n                ))\n            }            \n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogOut } from '../../actions/auth'\nimport { startNewNote } from '../../actions/notes'\nimport { JournalEntries } from './JournalEntries'\n\nexport const Sidebar = () => {\n\n    const dispatch = useDispatch()\n    const {name} = useSelector(state => state.auth)\n\n    const handleLogOut = () => {\n        dispatch(startLogOut())\n    }\n\n\n    const handleAddNew = () => {\n        dispatch(startNewNote());\n        console.log(\"works!!!!!!!!!\");\n    }\n\n\n\n    return (\n        <aside className=\"journal__sidebar\">\n            <div className=\"journal__sidebar-navbar\">\n\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span>  {name} </span>\n                </h3>\n\n\n                <button\n                    className=\"btn\"\n                    onClick={ handleLogOut }\n                >\n                    Logout\n                </button>\n            </div>\n\n            <div className=\"journal__new-entry\" onClick={handleAddNew}>\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                <p className=\"mt-5\">\n                    new Entry \n                </p>\n            </div>\n\n            <JournalEntries />\n\n        </aside>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { NoteScreen } from '../notes/NoteScreen'\nimport { NothingSelected } from './NothingSelected'\nimport { Sidebar } from './Sidebar'\n\nexport const JournalScreen = () => {\n\n\n    const {active} = useSelector(state => state.notes)\n\n    return (\n        <div \n            className=\"journal__main_content animate__animated animate__fadeIn animate__faster\"\n        >\n            \n\n                <Sidebar />\n\n                <main>\n                    {\n                        (active) \n                            ? (<NoteScreen />)\n                            : (<NothingSelected />)\n                    }\n                    \n                    \n                </main>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {  startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\n\nexport const LoginScreen = () => {\n    \n    const dispatch = useDispatch();\n    const uiState = useSelector(state => state.ui)\n\n    const initialForm = {\n        email: 'rando@gmail.com',\n        password: '123456'\n    };\n    \n    const [ formValues, handleInputChange ] = useForm( initialForm );\n\n    const { email, password} = formValues;\n\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n\n        dispatch(startLoginEmailPassword(email, password))\n    }\n \n    const handleGoogleLogin = () => {\n        dispatch(startGoogleLogin())\n    }\n    return (\n        <>\n            <h3 className=\"auth__title\"> Login </h3>\n\n            <form \n                onSubmit={handleLogin} \n                className=\"animate__animated animate__fadeIn animate__faster\"\n            >\n                <input\n                    type=\"text\"\n                    className=\"auth__input\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"password\"\n                    className=\"auth__input\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={password}\n                    onChange={handleInputChange}\n                />\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    disabled={uiState.loading}\n                >\n                    Log in\n                </button>\n\n\n                <div className=\"auth__social-networks\">\n                    <p>Login with social networks</p>\n\n                    <div \n                        onClick={handleGoogleLogin}\n                        className=\"google-btn\"\n                        >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text \">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n\n                <Link\n                    className=\"link\"\n                    to=\"/auth/register\"\n                >\n                    Create new account\n                </Link>\n            </form>\n        </>\n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useForm } from '../../hooks/useForm';\nimport validator from 'validator';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeError, setError } from '../../actions/ui';\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\n\n\nexport const RegisterScreen = () => {\n    \n    const dispatch = useDispatch()\n    const uiState = useSelector(state => state.ui)\n\n    \n    console.log(uiState);\n    const [ formValues, handleInputChange ] = useForm( {\n        email: \"rando@gmail.com\",\n        name: \"starlinD\",\n        password: \"1234\",\n        password2: \"1234\",\n    } );\n\n    const { email, password, name,password2} = formValues;\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if(!isFormValid()) return\n        console.log({email, password, name,password2});\n        dispatch(\n            startRegisterWithEmailPasswordName(email, password, name)\n        )\n    }\n\n    const isFormValid = () => {\n        if(name.trim().length === 0) {\n            dispatch(\n                setError(\"Name is required\")\n            )\n            console.log(\"Name is required\");\n            return false;\n        }\n\n        if(!validator.isEmail(email)) {\n            dispatch(\n                setError(\"Email is not valid\")\n            )\n            console.log(\"Email is not valid\");\n            return false;\n        }\n\n        if(password !== password2 || password.length < 5) {\n            dispatch(\n                setError(\"Password should be at least 6 characters and match\")\n            )\n            console.log(\"Password should be at least 6 characters and match\");\n            return false;\n        }\n        \n        dispatch(\n            removeError()\n        )\n        return true;\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\"> Login </h3>\n\n            <form\n                onSubmit={handleSubmit}\n                className=\"animate__animated animate__fadeIn animate__faster\"\n            >\n\n                {\n                    uiState.msgError &&\n                    (\n                        <div className=\"auth__alert-error\">\n                            {uiState.msgError}\n                        </div>\n                    )\n                }\n                \n\n                 <input\n                    type=\"text\"\n                    className=\"auth__input\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    autoComplete=\"off\"\n                    value={name}\n                    onChange={handleInputChange}\n                />\n\n               <input\n                    type=\"text\"\n                    className=\"auth__input\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={handleInputChange}\n                />\n\n\n                <input\n                    type=\"password\"\n                    className=\"auth__input\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={password}\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"password\"\n                    className=\"auth__input\"\n                    placeholder=\"Confirm password\"\n                    name=\"password2\"\n                    value={password2}\n                    onChange={handleInputChange}\n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mb-1\"\n                >\n                    Log in\n                </button>\n\n\n\n                <Link\n                    className=\"link\"\n                    to=\"/auth/login\"\n                >\n                    Already registered\n                </Link>\n            </form>\n        </>\n    )\n}\n","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { LoginScreen } from '../components/auth/LoginScreen'\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\n\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\">\n            <div className=\"auth__box-container\">\n                <Switch>\n                    <Route exact path=\"/auth/login\"  component= {LoginScreen} />\n                    <Route exact path=\"/auth/register\"  component= {RegisterScreen} />\n\n                    <Redirect to=\"/auth/login\" />\n                </Switch>\n                \n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Redirect, Route } from 'react-router'\nimport PropTypes from \"prop-types\"\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route  {...rest}\n            component = {props => (\n                (isAuthenticated) \n                    ? (<Component  {...props} />)\n                    : (<Redirect to=\"/auth/login\" />)\n            )}\n        />\n    )\n}\n\n\nPrivateRoute.propTypes ={\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react'\nimport { Redirect, Route } from 'react-router'\nimport PropTypes from \"prop-types\"\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        \n        <Route {...rest} \n            component= {props => (\n                (!isAuthenticated) \n                    ? (<Component  {...props} />)\n                    : (<Redirect to=\"/\" />)\n            )}\n        />\n    )\n}\n\nPublicRoute.propTypes ={\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect, useState } from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from \"react-router-dom\";\nimport { JournalScreen } from '../components/journal/JournalScreen'\nimport { AuthRouter } from './AuthRouter'\nimport { firebase } from '../firebase/firebase-config'\nimport { useDispatch } from 'react-redux';\nimport { login } from '../actions/auth';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\nimport { startLoadingNotes } from '../actions/notes';\n\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch()\n    const [checking, setChecking] = useState(true)\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n\n    useEffect(() => {\n        firebase.auth().onAuthStateChanged(async (user ) => {\n            if(user?.uid) {\n\n                dispatch(\n                    login(user.uid, user.displayName)\n                )\n                setIsLoggedIn(true)\n\n                dispatch(startLoadingNotes(user.uid))\n            } else {\n                setIsLoggedIn(false)\n            }\n\n            \n            (<Redirect to=\"/auth/login\" />)\n            setChecking(false)\n        })\n        \n    }, [dispatch,  isLoggedIn])\n\n\n    if(checking) {\n        return (\n            <h1> <i className=\"fas fa-cog fa-spin \"></i>Por favor espere...</h1>\n        )\n    }\n\n    return (\n        <Router>\n\n            <div>\n                <Switch>\n                    <PublicRoute\n                        path=\"/auth\"\n                        component= {AuthRouter}\n                        isAuthenticated = {isLoggedIn}\n                    />\n\n                    <PrivateRoute \n                        path=\"/\"\n                        exact\n                        component= {JournalScreen}\n                        isAuthenticated = {isLoggedIn}\n                    />\n                    \n                    <Redirect to=\"/auth/login\" />\n\n                </Switch>\n            </div>\n                    \n        </Router>\n    )\n}\n","import { Types } from \"../types/types\";\n\n\nconst initialState = {\n    notes: [],\n    active: null\n}\n\n\nexport const notesReducer = (state = initialState, action ) => {\n\n    const payload = action.payload\n\n    switch (action.type) {\n        case Types.notesActive:\n            return {\n                ...state,\n                active: {\n                    ...payload\n                }\n            }\n        \n        case Types.notesAddNew: \n            return  {\n                ...state,\n                notes: [action.payload, ...state.notes]\n            }\n\n        case Types.notesLoad:\n            return {\n                ...state,\n                notes: [...payload]\n            }\n            \n        case Types.notesUpdated:\n                console.log(payload);\n            \n            return {\n                ...state,\n                notes: state.notes.map(not => {\n                    if(not.id === payload) return payload\n                    return not\n                })\n            }\n    \n        case Types.notesDelete:\n            return {\n                ...state,\n                active: null,\n                notes: state.notes.filter(not => not.id != payload)\n            }\n\n        case Types.notesLogoutCleaning:\n            return {\n                ...state,\n                notes: [],\n                active: null\n            }\n        default:\n            return state;\n    }\n}","import { Types } from \"../types/types\";\n\nconst initialState = {\n    loading: false,\n    msgError: null\n}\n\n\nexport const uiReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case Types.uiSetError:\n\n            return {\n                ...state,\n                msgError: action.payload\n            };\n        case Types.uiRemoveError:\n\n            return {\n                ...state,\n                msgError: null\n            };\n        case Types.uiStartLoading:\n\n            return {\n                ...state,\n                loading: true\n            };\n    \n        case Types.uiFinisthLoading:\n\n            return {\n                ...state,\n                loading: false\n            };\n    \n        default:\n            return state;\n    }\n\n}","import {createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { authReducer } from '../reducers/authReducer';\nimport { notesReducer } from '../reducers/notesReducer';\nimport { uiReducer } from '../reducers/uiReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    ui: uiReducer,\n    notes: notesReducer\n})\n\n\nexport const store = createStore(\n    reducers,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n)\n","import {  Types } from \"../types/types\";\n\n\nexport const authReducer = (state = {}, action) => {\n\n    switch (action.type) {\n        case Types.login:\n            \n            return {\n                uid: action.payload.uid,\n                name: action.payload.displayName\n            }\n        case Types.logout:\n            \n            return { }\n\n        default:\n            return state;\n    }\n\n\n}","import React from 'react'\nimport { AppRouter } from './routers/AppRouter'\nimport { Provider } from \"react-redux\";\nimport { store } from './store/store';\n\n\nexport const JournalApp = () => {\n    return (\n        <Provider store = {store}>\n            <AppRouter/>\n\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/style.scss';\nimport { JournalApp } from './JournalApp';\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}